{"version":3,"sources":["services/user/actions.js","../node_modules/simple-react-validator/dist/simple-react-validator.min.js","components/Mobile/Elements/BackButton.js","components/Mobile/Auth/ForgotPassword/index.js"],"names":["__webpack_require__","d","__webpack_exports__","loginUser","registerUser","logoutUser","updateUserInfo","checkUserRunningOrder","sendOtp","verifyOtp","getWalletTransactions","sendPasswordResetMail","verifyPasswordResetOtp","changeUserPassword","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","_configs__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","n","name","email","password","accessToken","phone","provider","address","dispatch","Axios","post","LOGIN_USER_URL","then","response","user","data","type","LOGIN_USER","payload","catch","error","console","log","REGISTER_USER_URL","REGISTER_USER","localStorage","removeItem","LOGOUT_USER","RUNNING_ORDER","GET_WALLET_TRANSACTIONS","user_id","token","unique_order_id","UPDATE_USER_INFO_URL","UPDATE_USER_INFO","CHECK_USER_RUNNING_ORDER_URL","running_order","SEND_OTP_URL","SEND_OTP","otp","VERIFY_OTP_URL","VERIFY_OTP","GET_WALLET_TRANSACTIONS_URL","wallet","SEND_PASSWORD_RESET_EMAIL_URL","SEND_PASSWORD_RESET_EMAIL","code","VERIFY_PASSWORD_RESET_OTP_URL","VERIFY_PASSWORD_RESET_OTP","CHANGE_USER_PASSWORD_URL","CHANGE_USER_PASSWORD","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","g","e","t","Array","isArray","Symbol","iterator","Object","prototype","toString","call","r","s","a","i","u","next","done","push","value","length","return","TypeError","constructor","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","apply","b","arguments","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","configurable","writable","key","this","visibleFields","includes","helpers","forceUpdateIfNeeded","indexOf","splice","parent","passes","hasOwnProperty","isRequired","isBlank","rule","concat","required","testRegex","normalizeValues","valueOrEmptyString","getValidation","getOptions","split","values","toSentence","slice","join","match","autoForceUpdate","forceUpdate","message","messages","default","replace","humanizeFieldName","toLowerCase","element","className","numeric","momentInstalled","window","moment","warn","size","parseFloat","sizeText","fields","errorMessages","messagesShown","rules","accepted","after","isMoment","isAfter","messageReplace","format","after_or_equal","isSameOrAfter","alpha","alpha_space","alpha_num","alpha_num_space","alpha_num_dash","alpha_num_dash_space","array","before","isBefore","before_or_equal","isSameOrBefore","between","boolean","card_exp","card_num","currency","date","date_equals","isSame","in","integer","max","min","not_in","not_regex","String","RegExp","regex","string","typeof","url","validators","locales","locale","navigator","product","createElement","fieldValid","l","o","c","m","h","p","f","en","exports","module","BackButton","react__WEBPACK_IMPORTED_MODULE_5___default","Fragment","style","position","onClick","context","router","history","goBack","react_ink__WEBPACK_IMPORTED_MODULE_6___default","duration","Component","contextTypes","ForgotPassword","_this","H_Nacho_proyectos_precission_repartiendo_nacho_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","H_Nacho_proyectos_precission_repartiendo_nacho_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","H_Nacho_proyectos_precission_repartiendo_nacho_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","state","loading","show_mail_form","show_code_validation_form","show_password_change_form","error_msg","dontHaveOtp","completed","handleInputChange","event","setState","H_Nacho_proyectos_precission_repartiendo_nacho_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","handleAlreadyHaveOtp","validator","refs","otpInput","focus","emailInput","showMessages","handleDontHaveOtp","handleSendEmail","preventDefault","otpEmailSendBtn","setAttribute","props","handleValidateCode","otpVerifyBtn","handleChangePassword","changePassBtn","passwordInput","SimpleReactValidator","H_Nacho_proyectos_precission_repartiendo_nacho_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","getItem","nextProps","_this2","reset_mail","success","removeAttribute","error_code","validate_email_otp","change_password","setTimeout","innerWidth","react__WEBPACK_IMPORTED_MODULE_7___default","react_router__WEBPACK_IMPORTED_MODULE_9__","to","backgroundColor","_Elements_BackButton__WEBPACK_IMPORTED_MODULE_10__","src","alt","onSubmit","onChange","ref","width","connect"],"mappings":"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","file":"static/js/26.cd4c7c5b.chunk.js","sourcesContent":["import {\r\n\tLOGIN_USER,\r\n\tREGISTER_USER,\r\n\tLOGOUT_USER,\r\n\tUPDATE_USER_INFO,\r\n\tSEND_OTP,\r\n\tVERIFY_OTP,\r\n\tRUNNING_ORDER,\r\n\tGET_WALLET_TRANSACTIONS,\r\n\tSEND_PASSWORD_RESET_EMAIL,\r\n\tVERIFY_PASSWORD_RESET_OTP,\r\n\tCHANGE_USER_PASSWORD,\r\n} from \"./actionTypes\";\r\nimport {\r\n\tLOGIN_USER_URL,\r\n\tREGISTER_USER_URL,\r\n\tUPDATE_USER_INFO_URL,\r\n\tSEND_OTP_URL,\r\n\tVERIFY_OTP_URL,\r\n\tCHECK_USER_RUNNING_ORDER_URL,\r\n\tGET_WALLET_TRANSACTIONS_URL,\r\n\tSEND_PASSWORD_RESET_EMAIL_URL,\r\n\tVERIFY_PASSWORD_RESET_OTP_URL,\r\n\tCHANGE_USER_PASSWORD_URL,\r\n} from \"../../configs\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nexport const loginUser = (name, email, password, accessToken, phone, provider, address) => (dispatch) => {\r\n\tAxios.post(LOGIN_USER_URL, {\r\n\t\tname: name,\r\n\t\temail: email,\r\n\t\tpassword: password,\r\n\t\taccessToken: accessToken,\r\n\t\tphone: phone,\r\n\t\tprovider: provider,\r\n\t\taddress: address,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst user = response.data;\r\n\t\t\treturn dispatch({ type: LOGIN_USER, payload: user });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const registerUser = (name, email, phone, password, address) => (dispatch) => {\r\n\tAxios.post(REGISTER_USER_URL, {\r\n\t\tname: name,\r\n\t\temail: email,\r\n\t\tphone: phone,\r\n\t\tpassword: password,\r\n\t\taddress: address,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst user = response.data;\r\n\t\t\treturn dispatch({ type: REGISTER_USER, payload: user });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const logoutUser = (user) => (dispatch) => {\r\n\tuser = [];\r\n\tconst walletEmpty = [];\r\n\r\n\t//remove geoLocation and userSetAddress\r\n\tlocalStorage.removeItem(\"userSetAddress\");\r\n\tlocalStorage.removeItem(\"geoLocation\");\r\n\tlocalStorage.removeItem(\"lastSavedNotificationToken\");\r\n\r\n\tdispatch({\r\n\t\ttype: LOGOUT_USER,\r\n\t\tpayload: user,\r\n\t});\r\n\tdispatch({\r\n\t\ttype: RUNNING_ORDER,\r\n\t\tpayload: false,\r\n\t});\r\n\tdispatch({\r\n\t\ttype: GET_WALLET_TRANSACTIONS,\r\n\t\tpayload: walletEmpty,\r\n\t});\r\n};\r\n\r\nexport const updateUserInfo = (user_id, token, unique_order_id) => (dispatch) => {\r\n\treturn Axios.post(UPDATE_USER_INFO_URL, {\r\n\t\ttoken: token,\r\n\t\tuser_id: user_id,\r\n\t\tunique_order_id: unique_order_id,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst user = response.data;\r\n\t\t\treturn dispatch({ type: UPDATE_USER_INFO, payload: user });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const checkUserRunningOrder = (user_id, token) => (dispatch) => {\r\n\tAxios.post(CHECK_USER_RUNNING_ORDER_URL, {\r\n\t\ttoken: token,\r\n\t\tuser_id: user_id,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst running_order = response.data;\r\n\t\t\treturn dispatch({ type: RUNNING_ORDER, payload: running_order });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const sendOtp = (email, phone, accessToken, provider) => (dispatch) => {\r\n\treturn Axios.post(SEND_OTP_URL, {\r\n\t\temail: email,\r\n\t\tphone: phone,\r\n\t\taccessToken: accessToken,\r\n\t\tprovider: provider,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst user = response.data;\r\n\t\t\treturn dispatch({ type: SEND_OTP, payload: user });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const verifyOtp = (phone, otp) => (dispatch) => {\r\n\tAxios.post(VERIFY_OTP_URL, {\r\n\t\tphone: phone,\r\n\t\totp: otp,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst user = response.data;\r\n\t\t\treturn dispatch({ type: VERIFY_OTP, payload: user });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const getWalletTransactions = (token, user_id) => (dispatch) => {\r\n\tAxios.post(GET_WALLET_TRANSACTIONS_URL, {\r\n\t\ttoken: token,\r\n\t\tuser_id: user_id,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst wallet = response.data;\r\n\t\t\treturn dispatch({ type: GET_WALLET_TRANSACTIONS, payload: wallet });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const sendPasswordResetMail = (email) => (dispatch) => {\r\n\tAxios.post(SEND_PASSWORD_RESET_EMAIL_URL, {\r\n\t\temail: email,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst data = response.data;\r\n\t\t\treturn dispatch({ type: SEND_PASSWORD_RESET_EMAIL, payload: data });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const verifyPasswordResetOtp = (email, code) => (dispatch) => {\r\n\tAxios.post(VERIFY_PASSWORD_RESET_OTP_URL, {\r\n\t\temail: email,\r\n\t\tcode: code,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst data = response.data;\r\n\t\t\treturn dispatch({ type: VERIFY_PASSWORD_RESET_OTP, payload: data });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const changeUserPassword = (email, code, password) => (dispatch) => {\r\n\tAxios.post(CHANGE_USER_PASSWORD_URL, {\r\n\t\temail: email,\r\n\t\tcode: code,\r\n\t\tpassword: password,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst data = response.data;\r\n\t\t\treturn dispatch({ type: CHANGE_USER_PASSWORD, payload: data });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n","// Simple React Validator v1.2.4 | Created By Dockwa | MIT License | 2017 - Present\n!function (e, t) {\n  \"function\" == typeof define && define.amd ? define([\"react\"], t) : \"object\" == typeof exports ? module.exports = t(require(\"react\")) : e.SimpleReactValidator = t(e.React);\n}(this, function (n) {\n  \"use strict\";\n\n  function g(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          s = !0,\n          n = !1,\n          a = void 0;\n\n      try {\n        for (var i, u = e[Symbol.iterator](); !(s = (i = u.next()).done) && (r.push(i.value), !t || r.length !== t); s = !0) {\n          ;\n        }\n      } catch (e) {\n        n = !0, a = e;\n      } finally {\n        try {\n          s || null == u.return || u.return();\n        } finally {\n          if (n) throw a;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  function a(e) {\n    return (a = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n      return typeof e;\n    } : function (e) {\n      return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n    })(e);\n  }\n\n  function s(t, e) {\n    var r = Object.keys(t);\n\n    if (Object.getOwnPropertySymbols) {\n      var s = Object.getOwnPropertySymbols(t);\n      e && (s = s.filter(function (e) {\n        return Object.getOwnPropertyDescriptor(t, e).enumerable;\n      })), r.push.apply(r, s);\n    }\n\n    return r;\n  }\n\n  function b(t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var r = null != arguments[e] ? arguments[e] : {};\n      e % 2 ? s(r, !0).forEach(function (e) {\n        u(t, e, r[e]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : s(r).forEach(function (e) {\n        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));\n      });\n    }\n\n    return t;\n  }\n\n  function i(e, t) {\n    for (var r = 0; r < t.length; r++) {\n      var s = t[r];\n      s.enumerable = s.enumerable || !1, s.configurable = !0, \"value\" in s && (s.writable = !0), Object.defineProperty(e, s.key, s);\n    }\n  }\n\n  function e(e, t, r) {\n    return t && i(e.prototype, t), r && i(e, r), e;\n  }\n\n  function u(e, t, r) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = r, e;\n  }\n\n  var t = function () {\n    function s() {\n      var r = this,\n          e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};\n      !function (e, t) {\n        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n      }(this, s), u(this, \"showMessageFor\", function (e) {\n        r.visibleFields.includes(e) || r.visibleFields.push(e), r.helpers.forceUpdateIfNeeded();\n      }), u(this, \"hideMessageFor\", function (e) {\n        var t = r.visibleFields.indexOf(e);\n        -1 < t && r.visibleFields.splice(t, 1), r.helpers.forceUpdateIfNeeded();\n      }), u(this, \"helpers\", {\n        parent: this,\n        passes: function passes(e, t, r, s) {\n          return s.hasOwnProperty(e) ? !(this.isRequired(e, s) || !this.isBlank(t)) || !1 !== s[e].rule(t, r, this.parent) : (console.error(\"Rule Not Found: There is no rule with the name \".concat(e, \".\")), !0);\n        },\n        isRequired: function isRequired(e, t) {\n          return t[e].hasOwnProperty(\"required\") && t[e].required;\n        },\n        isBlank: function isBlank(e) {\n          return null == e || this.testRegex(e, /^[\\s]*$/);\n        },\n        normalizeValues: function normalizeValues(e, t) {\n          return [this.valueOrEmptyString(e), this.getValidation(t), this.getOptions(t)];\n        },\n        getValidation: function getValidation(e) {\n          return e === Object(e) && Object.keys(e).length ? Object.keys(e)[0] : e.split(\":\")[0];\n        },\n        getOptions: function getOptions(e) {\n          if (e === Object(e) && Object.values(e).length) {\n            var t = Object.values(e)[0];\n            return Array.isArray(t) ? t : [t];\n          }\n\n          return 1 < (t = e.split(\":\")).length ? t[1].split(\",\") : [];\n        },\n        valueOrEmptyString: function valueOrEmptyString(e) {\n          return null == e ? \"\" : e;\n        },\n        toSentence: function toSentence(e) {\n          return e.slice(0, -2).join(\", \") + (e.slice(0, -2).length ? \", \" : \"\") + e.slice(-2).join(2 < e.length ? \", or \" : \" or \");\n        },\n        testRegex: function testRegex(e, t) {\n          return null !== e.toString().match(t);\n        },\n        forceUpdateIfNeeded: function forceUpdateIfNeeded() {\n          this.parent.autoForceUpdate && this.parent.autoForceUpdate.forceUpdate();\n        },\n        message: function message(e, t, r, s) {\n          r.messages = r.messages || {};\n          var n = r.messages[e] || r.messages.default || this.parent.messages[e] || this.parent.messages.default || s[e].message;\n          return n.replace(\":attribute\", this.humanizeFieldName(t));\n        },\n        humanizeFieldName: function humanizeFieldName(e) {\n          return e.replace(/([A-Z])/g, \" $1\").replace(/_/g, \" \").toLowerCase();\n        },\n        element: function element(e, t) {\n          var r = t.element || this.parent.element;\n          return r(e, t.className);\n        },\n        numeric: function numeric(e) {\n          return this.testRegex(e, /^(\\d+.?\\d*)?$/);\n        },\n        momentInstalled: function momentInstalled() {\n          return !(!window || !window.moment) || (console.warn(\"Date validators require using momentjs https://momentjs.com and moment objects.\"), !1);\n        },\n        size: function size(e, t) {\n          return \"string\" === t || void 0 === t || \"array\" === t ? e.length : \"num\" === t ? parseFloat(e) : void 0;\n        },\n        sizeText: function sizeText(e) {\n          return \"string\" === e || void 0 === e ? \" characters\" : \"array\" === e ? \" elements\" : \"\";\n        }\n      }), this.fields = {}, this.visibleFields = [], this.errorMessages = {}, this.messagesShown = !1, this.rules = b({\n        accepted: {\n          message: \"The :attribute must be accepted.\",\n          rule: function rule(e) {\n            return !0 === e;\n          },\n          required: !0\n        },\n        after: {\n          message: \"The :attribute must be after :date.\",\n          rule: function rule(e, t) {\n            return r.helpers.momentInstalled() && moment.isMoment(e) && e.isAfter(t[0], \"day\");\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":date\", t[0].format(\"MM/DD/YYYY\"));\n          }\n        },\n        after_or_equal: {\n          message: \"The :attribute must be after or on :date.\",\n          rule: function rule(e, t) {\n            return r.helpers.momentInstalled() && moment.isMoment(e) && e.isSameOrAfter(t[0], \"day\");\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":date\", t[0].format(\"MM/DD/YYYY\"));\n          }\n        },\n        alpha: {\n          message: \"The :attribute may only contain letters.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^[A-Z]*$/i);\n          }\n        },\n        alpha_space: {\n          message: \"The :attribute may only contain letters and spaces.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^[A-Z\\s]*$/i);\n          }\n        },\n        alpha_num: {\n          message: \"The :attribute may only contain letters and numbers.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^[A-Z0-9]*$/i);\n          }\n        },\n        alpha_num_space: {\n          message: \"The :attribute may only contain letters, numbers, and spaces.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^[A-Z0-9\\s]*$/i);\n          }\n        },\n        alpha_num_dash: {\n          message: \"The :attribute may only contain letters, numbers, and dashes.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^[A-Z0-9_-]*$/i);\n          }\n        },\n        alpha_num_dash_space: {\n          message: \"The :attribute may only contain letters, numbers, dashes, and spaces.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^[A-Z0-9_-\\s]*$/i);\n          }\n        },\n        array: {\n          message: \"The :attribute must be an array.\",\n          rule: function rule(e) {\n            return Array.isArray(e);\n          }\n        },\n        before: {\n          message: \"The :attribute must be before :date.\",\n          rule: function rule(e, t) {\n            return r.helpers.momentInstalled() && moment.isMoment(e) && e.isBefore(t[0], \"day\");\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":date\", t[0].format(\"MM/DD/YYYY\"));\n          }\n        },\n        before_or_equal: {\n          message: \"The :attribute must be before or on :date.\",\n          rule: function rule(e, t) {\n            return r.helpers.momentInstalled() && moment.isMoment(e) && e.isSameOrBefore(t[0], \"day\");\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":date\", t[0].format(\"MM/DD/YYYY\"));\n          }\n        },\n        between: {\n          message: \"The :attribute must be between :min and :max:type.\",\n          rule: function rule(e, t) {\n            return r.helpers.size(e, t[2]) >= parseFloat(t[0]) && r.helpers.size(e, t[2]) <= parseFloat(t[1]);\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":min\", t[0]).replace(\":max\", t[1]).replace(\":type\", r.helpers.sizeText(t[2]));\n          }\n        },\n        boolean: {\n          message: \"The :attribute must be a boolean.\",\n          rule: function rule(e) {\n            return !1 === e || !0 === e;\n          }\n        },\n        card_exp: {\n          message: \"The :attribute must be a valid expiration date.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^(([0]?[1-9]{1})|([1]{1}[0-2]{1}))\\s?\\/\\s?(\\d{2}|\\d{4})$/);\n          }\n        },\n        card_num: {\n          message: \"The :attribute must be a valid credit card number.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^\\d{4}\\s?\\d{4,6}\\s?\\d{4,5}\\s?\\d{0,8}$/);\n          }\n        },\n        currency: {\n          message: \"The :attribute must be a valid currency.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^\\$?(\\d{1,3})(\\,?\\d{3})*\\.?\\d{0,2}$/);\n          }\n        },\n        date: {\n          message: \"The :attribute must be a date.\",\n          rule: function rule(e) {\n            return r.helpers.momentInstalled() && moment.isMoment(e);\n          }\n        },\n        date_equals: {\n          message: \"The :attribute must be on :date.\",\n          rule: function rule(e, t) {\n            return r.helpers.momentInstalled() && moment.isMoment(e) && e.isSame(t[0], \"day\");\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":date\", t[0].format(\"MM/DD/YYYY\"));\n          }\n        },\n        email: {\n          message: \"The :attribute must be a valid email address.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^[A-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i);\n          }\n        },\n        in: {\n          message: \"The selected :attribute must be :values.\",\n          rule: function rule(e, t) {\n            return t.includes(e);\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":values\", r.helpers.toSentence(t));\n          }\n        },\n        integer: {\n          message: \"The :attribute must be an integer.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^\\d*$/);\n          }\n        },\n        max: {\n          message: \"The :attribute may not be greater than :max:type.\",\n          rule: function rule(e, t) {\n            return r.helpers.size(e, t[1]) <= parseFloat(t[0]);\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":max\", t[0]).replace(\":type\", r.helpers.sizeText(t[1]));\n          }\n        },\n        min: {\n          message: \"The :attribute must be at least :min:type.\",\n          rule: function rule(e, t) {\n            return r.helpers.size(e, t[1]) >= parseFloat(t[0]);\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":min\", t[0]).replace(\":type\", r.helpers.sizeText(t[1]));\n          }\n        },\n        not_in: {\n          message: \"The selected :attribute must not be :values.\",\n          rule: function rule(e, t) {\n            return !t.includes(e);\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":values\", r.helpers.toSentence(t));\n          }\n        },\n        not_regex: {\n          message: \"The :attribute must not match the required pattern.\",\n          rule: function rule(e, t) {\n            return !r.helpers.testRegex(e, \"string\" == typeof t[0] || t[0] instanceof String ? new RegExp(t[0]) : t[0]);\n          }\n        },\n        numeric: {\n          message: \"The :attribute must be a number.\",\n          rule: function rule(e) {\n            return r.helpers.numeric(e);\n          }\n        },\n        phone: {\n          message: \"The :attribute must be a valid phone number.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/);\n          }\n        },\n        regex: {\n          message: \"The :attribute must match the required pattern.\",\n          rule: function rule(e, t) {\n            return r.helpers.testRegex(e, \"string\" == typeof t[0] || t[0] instanceof String ? new RegExp(t[0]) : t[0]);\n          }\n        },\n        required: {\n          message: \"The :attribute field is required.\",\n          rule: function rule(e) {\n            return !r.helpers.isBlank(e);\n          },\n          required: !0\n        },\n        size: {\n          message: \"The :attribute must be :size:type.\",\n          rule: function rule(e, t) {\n            return r.helpers.size(e, t[1]) == parseFloat(t[0]);\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":size\", t[0]).replace(\":type\", r.helpers.sizeText(t[1]));\n          }\n        },\n        string: {\n          message: \"The :attribute must be a string.\",\n          rule: function rule(e) {\n            return a(e) === a(\"string\");\n          }\n        },\n        typeof: {\n          message: \"The :attribute is not the correct type of :type.\",\n          rule: function rule(e, t) {\n            return a(e) === a(t[0]);\n          },\n          messageReplace: function messageReplace(e, t) {\n            return e.replace(\":type\", a(t[0]));\n          }\n        },\n        url: {\n          message: \"The :attribute must be a url.\",\n          rule: function rule(e) {\n            return r.helpers.testRegex(e, /^(https?|ftp):\\/\\/(-\\.)?([^\\s/?\\.#-]+\\.?)+(\\/[^\\s]*)?$/i);\n          }\n        }\n      }, e.validators || {}), s.locales.hasOwnProperty(e.locale) || console.warn(\"Locale not found! Make sure it is spelled correctly and the locale file is loaded.\");\n      var t = s.locales[e.locale] || {};\n      Object.keys(this.rules).forEach(function (e) {\n        r.rules[e].message = t[e] || r.rules[e].message;\n      }), this.messages = e.messages || {}, this.className = e.className, this.autoForceUpdate = e.autoForceUpdate || !1, !1 === e.element ? this.element = function (e) {\n        return e;\n      } : e.hasOwnProperty(\"element\") ? this.element = e.element : \"object\" === (\"undefined\" == typeof navigator ? \"undefined\" : a(navigator)) && \"ReactNative\" === navigator.product ? this.element = function (e) {\n        return e;\n      } : this.element = function (e, t) {\n        return n.createElement(\"div\", {\n          className: t || r.className || \"srv-validation-message\"\n        }, e);\n      };\n    }\n\n    return e(s, null, [{\n      key: \"addLocale\",\n      value: function value(e, t) {\n        this.locales[e] = t;\n      }\n    }]), e(s, [{\n      key: \"getErrorMessages\",\n      value: function value() {\n        return this.errorMessages;\n      }\n    }, {\n      key: \"showMessages\",\n      value: function value() {\n        this.messagesShown = !0, this.helpers.forceUpdateIfNeeded();\n      }\n    }, {\n      key: \"hideMessages\",\n      value: function value() {\n        this.messagesShown = !1, this.helpers.forceUpdateIfNeeded();\n      }\n    }, {\n      key: \"allValid\",\n      value: function value() {\n        for (var e in this.fields) {\n          if (!1 === this.fieldValid(e)) return !1;\n        }\n\n        return !0;\n      }\n    }, {\n      key: \"fieldValid\",\n      value: function value(e) {\n        return this.fields.hasOwnProperty(e) && !0 === this.fields[e];\n      }\n    }, {\n      key: \"purgeFields\",\n      value: function value() {\n        this.fields = {}, this.errorMessages = {};\n      }\n    }, {\n      key: \"messageWhenPresent\",\n      value: function value(e) {\n        var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};\n        if (!this.helpers.isBlank(e) && this.messagesShown) return this.helpers.element(e, t);\n      }\n    }, {\n      key: \"messageAlways\",\n      value: function value(e, t) {\n        var r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {};\n        if (console.warn(\"The messageAlways() method is deprecated in SimpleReactValidator. Please see the documentation and switch to the messageWhenPresent() method.\"), t && this.messagesShown) return this.helpers.element(t, r);\n      }\n    }, {\n      key: \"message\",\n      value: function value(e, t, r) {\n        var s = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : {};\n        this.errorMessages[e] = null, this.fields[e] = !0, Array.isArray(r) || (r = r.split(\"|\"));\n        var n = s.validators ? b({}, this.rules, {}, s.validators) : this.rules,\n            a = !0,\n            i = !1,\n            u = void 0;\n\n        try {\n          for (var l, o = r[Symbol.iterator](); !(a = (l = o.next()).done); a = !0) {\n            var c = l.value,\n                m = g(this.helpers.normalizeValues(t, c), 3),\n                h = m[0],\n                p = m[1],\n                f = m[2];\n\n            if (!this.helpers.passes(p, h, f, n)) {\n              this.fields[e] = !1;\n              var d = this.helpers.message(p, e, s, n);\n              if (0 < f.length && n[p].hasOwnProperty(\"messageReplace\") && (d = n[p].messageReplace(d, f)), this.errorMessages[e] = d, this.messagesShown || this.visibleFields.includes(e)) return this.helpers.element(d, s);\n            }\n          }\n        } catch (e) {\n          i = !0, u = e;\n        } finally {\n          try {\n            a || null == o.return || o.return();\n          } finally {\n            if (i) throw u;\n          }\n        }\n      }\n    }]), s;\n  }();\n\n  return u(t, \"version\", \"1.2.4\"), u(t, \"locales\", {\n    en: {}\n  }), t;\n});","import React, { Component } from \"react\";\r\n\r\nimport Ink from \"react-ink\";\r\n\r\nclass BackButton extends Component {\r\n    static contextTypes = {\r\n        router: () => null\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn search-navs-btns back-button\"\r\n                    style={{ position: \"relative\" }}\r\n                    onClick={this.context.router.history.goBack}\r\n                >\r\n                    <i className=\"si si-arrow-left\" />\r\n                    <Ink duration=\"500\" />\r\n                </button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BackButton;\r\n","import React, { Component } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { Redirect } from \"react-router\";\r\nimport BackButton from \"../../Elements/BackButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    sendPasswordResetMail,\r\n    verifyPasswordResetOtp,\r\n    changeUserPassword\r\n} from \"../../../../services/user/actions\";\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor() {\r\n        super();\r\n        this.validator = new SimpleReactValidator({\r\n            autoForceUpdate: this,\r\n            messages: {\r\n                required: localStorage.getItem(\"fieldValidationMsg\"),\r\n                email: localStorage.getItem(\"emailValidationMsg\"),\r\n                min: localStorage.getItem(\"minimumLengthValidationMessage\")\r\n            }\r\n        });\r\n    }\r\n\r\n    state = {\r\n        loading: false,\r\n        email: \"\",\r\n        code: \"\",\r\n        password: \"\",\r\n        show_mail_form: true,\r\n        show_code_validation_form: false,\r\n        show_password_change_form: false,\r\n        error: false,\r\n        error_msg: \"\",\r\n        dontHaveOtp: true,\r\n        completed: false\r\n    };\r\n\r\n    static contextTypes = {\r\n        router: () => null\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    handleAlreadyHaveOtp = () => {\r\n        if (this.validator.fieldValid(\"email\")) {\r\n            this.setState(\r\n                {\r\n                    show_mail_form: false,\r\n                    show_code_validation_form: true,\r\n                    dontHaveOtp: false\r\n                },\r\n                () => {\r\n                    this.refs.otpInput.focus();\r\n                }\r\n            );\r\n        } else {\r\n            this.refs.emailInput.focus();\r\n            this.validator.showMessages();\r\n        }\r\n    };\r\n    handleDontHaveOtp = () => {\r\n        this.setState(\r\n            {\r\n                show_mail_form: true,\r\n                show_code_validation_form: false,\r\n                dontHaveOtp: true\r\n            },\r\n            () => {\r\n                this.refs.emailInput.focus();\r\n            }\r\n        );\r\n    };\r\n    handleSendEmail = event => {\r\n        event.preventDefault();\r\n        if (this.validator.fieldValid(\"email\")) {\r\n            this.refs.otpEmailSendBtn.setAttribute(\"disabled\", \"disabled\");\r\n            this.props.sendPasswordResetMail(this.state.email);\r\n            this.setState({ loading: true });\r\n        } else {\r\n            console.log(\"Email Validation Failed\");\r\n            this.validator.showMessages();\r\n            this.refs.emailInput.focus();\r\n        }\r\n    };\r\n\r\n    handleValidateCode = event => {\r\n        event.preventDefault();\r\n        if (this.validator.fieldValid(\"code\")) {\r\n            this.refs.otpVerifyBtn.setAttribute(\"disabled\", \"disabled\");\r\n            this.props.verifyPasswordResetOtp(\r\n                this.state.email,\r\n                this.state.code\r\n            );\r\n            this.setState({ loading: true });\r\n        } else {\r\n            console.log(\"Code Validation Failed\");\r\n            this.validator.showMessages();\r\n            this.refs.otpInput.focus();\r\n        }\r\n    };\r\n\r\n    handleChangePassword = event => {\r\n        event.preventDefault();\r\n        if (this.validator.fieldValid(\"password\")) {\r\n            this.refs.changePassBtn.setAttribute(\"disabled\", \"disabled\");\r\n            this.props.changeUserPassword(\r\n                this.state.email,\r\n                this.state.code,\r\n                this.state.password\r\n            );\r\n            this.setState({ loading: true });\r\n        } else {\r\n            console.log(\"Password Validation Failed\");\r\n            this.validator.showMessages();\r\n            this.refs.passwordInput.focus();\r\n        }\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.reset_mail !== nextProps.reset_mail) {\r\n            if (nextProps.reset_mail.success) {\r\n                console.log(\"Mail Sending Success\");\r\n                this.setState({\r\n                    loading: false,\r\n                    show_mail_form: false,\r\n                    show_code_validation_form: true,\r\n                    show_password_change_form: false\r\n                });\r\n            } else {\r\n                console.log(\"Mail Sending Failed\");\r\n                this.refs.otpEmailSendBtn.removeAttribute(\r\n                    \"disabled\",\r\n                    \"disabled\"\r\n                );\r\n                this.setState({ loading: false, error: true });\r\n                if (nextProps.reset_mail.error_code === \"UNF\") {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"userNotFoundErrorMessage\"\r\n                        )\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\"loginErrorMessage\")\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.validate_email_otp !== nextProps.validate_email_otp) {\r\n            if (nextProps.validate_email_otp.success) {\r\n                console.log(\"OTP Validation Success\");\r\n                this.setState({\r\n                    loading: false,\r\n                    show_mail_form: false,\r\n                    show_code_validation_form: false,\r\n                    show_password_change_form: true\r\n                });\r\n            } else {\r\n                console.log(\"OTP Validation Failed\");\r\n                this.refs.otpVerifyBtn.removeAttribute(\"disabled\", \"disabled\");\r\n                this.setState({ loading: false, error: true });\r\n                if (nextProps.validate_email_otp.error_code === \"UNF\") {\r\n                    console.log(\"userNotFoundErrorMessage\");\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"userNotFoundErrorMessage\"\r\n                        )\r\n                    });\r\n                }\r\n                if (nextProps.validate_email_otp.error_code === \"IVOTP\") {\r\n                    console.log(\"invalidOtpErrorMessage\");\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"invalidOtpErrorMessage\"\r\n                        )\r\n                    });\r\n                }\r\n                if (nextProps.validate_email_otp.error_code === \"SWR\") {\r\n                    console.log(\"loginErrorMessage\");\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\"loginErrorMessage\")\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.change_password !== nextProps.change_password) {\r\n            if (nextProps.change_password.success) {\r\n                console.log(\"Password Change Success\");\r\n                this.setState(\r\n                    {\r\n                        loading: false,\r\n                        show_mail_form: false,\r\n                        show_code_validation_form: false,\r\n                        show_password_change_form: false,\r\n                        error: false,\r\n                        completed: true\r\n                    },\r\n                    () => {\r\n                        setTimeout(() => {\r\n                            console.log(\"Redirecting to login page\");\r\n                            this.context.router.history.push(\"/login\");\r\n                        }, 2000);\r\n                    }\r\n                );\r\n            } else {\r\n                console.log(\"Password Change Failed\");\r\n                this.refs.changePassBtn.removeAttribute(\"disabled\", \"disabled\");\r\n                this.setState({ loading: false, error: true });\r\n                if (nextProps.change_password.error_code === \"UNF\") {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"userNotFoundErrorMessage\"\r\n                        )\r\n                    });\r\n                }\r\n                if (nextProps.change_password.error_code === \"IVOTP\") {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"invalidOtpErrorMessage\"\r\n                        )\r\n                    });\r\n                }\r\n                if (nextProps.change_password.error_code === \"SWR\") {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\"loginErrorMessage\")\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        if (window.innerWidth > 768) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (localStorage.getItem(\"storeColor\") === null) {\r\n            return <Redirect to={\"/\"} />;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.error && (\r\n                    <div className=\"auth-error\">\r\n                        <div className=\"error-shake\">\r\n                            {this.state.error_msg}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div style={{ backgroundColor: \"#f2f4f9\" }}>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <BackButton history={this.props.history} />\r\n                        </div>\r\n                    </div>\r\n                    <img\r\n                        src=\"/assets/img/login-header.png\"\r\n                        className=\"login-image pull-right mr-15\"\r\n                        alt=\"login-header\"\r\n                    />\r\n                    <div className=\"login-texts px-15 mt-50 pb-20\">\r\n                        <span className=\"login-title\">\r\n                            {localStorage.getItem(\"resetPasswordPageTitle\")}\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"login-subtitle\">\r\n                            {localStorage.getItem(\"resetPasswordPageSubTitle\")}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white\">\r\n                    {this.state.show_mail_form && (\r\n                        <React.Fragment>\r\n                            <form onSubmit={this.handleSendEmail}>\r\n                                <div className=\"form-group px-15 pt-30\">\r\n                                    <label className=\"col-12 edit-address-input-label\">\r\n                                        {localStorage.getItem(\r\n                                            \"loginLoginEmailLabel\"\r\n                                        )}{\" \"}\r\n                                        {this.validator.message(\r\n                                            \"email\",\r\n                                            this.state.email,\r\n                                            \"required|email\"\r\n                                        )}\r\n                                    </label>\r\n                                    <div className=\"col-md-9 pb-5\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"email\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control edit-address-input\"\r\n                                            ref=\"emailInput\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mt-20 px-15 pt-15 button-block\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-main\"\r\n                                        style={{\r\n                                            backgroundColor: localStorage.getItem(\r\n                                                \"storeColor\"\r\n                                            )\r\n                                        }}\r\n                                        ref=\"otpEmailSendBtn\"\r\n                                        required\r\n                                    >\r\n                                        {localStorage.getItem(\r\n                                            \"sendOtpOnEmailButtonText\"\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            {this.state.dontHaveOtp && (\r\n                                <div className=\"d-flex justify-content-center mt-50\">\r\n                                    <div\r\n                                        className=\"p-10 btn resend-otp w-75\"\r\n                                        onClick={this.handleAlreadyHaveOtp}\r\n                                    >\r\n                                        {localStorage.getItem(\r\n                                            \"alreadyHaveResetOtpButtonText\"\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    {this.state.show_code_validation_form && (\r\n                        <React.Fragment>\r\n                            <form onSubmit={this.handleValidateCode}>\r\n                                <div className=\"form-group px-15 pt-30\">\r\n                                    <label className=\"col-12 edit-address-input-label\">\r\n                                        {localStorage.getItem(\r\n                                            \"enterResetOtpMessageText\"\r\n                                        )}{\" \"}\r\n                                        {this.state.email}{\" \"}\r\n                                        {this.validator.message(\r\n                                            \"code\",\r\n                                            this.state.code,\r\n                                            \"required\"\r\n                                        )}\r\n                                    </label>\r\n                                    <div className=\"col-md-9 pb-5\">\r\n                                        <input\r\n                                            ref=\"otpInput\"\r\n                                            type=\"text\"\r\n                                            name=\"code\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control edit-address-input\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mt-20 px-15 pt-15 button-block\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-main\"\r\n                                        style={{\r\n                                            backgroundColor: localStorage.getItem(\r\n                                                \"storeColor\"\r\n                                            )\r\n                                        }}\r\n                                        ref=\"otpVerifyBtn\"\r\n                                    >\r\n                                        {localStorage.getItem(\r\n                                            \"verifyResetOtpButtonText\"\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            {!this.state.dontHaveOtp && (\r\n                                <div className=\"d-flex justify-content-center mt-50\">\r\n                                    <div\r\n                                        className=\"p-10 btn resend-otp w-75\"\r\n                                        onClick={this.handleDontHaveOtp}\r\n                                    >\r\n                                        {localStorage.getItem(\r\n                                            \"dontHaveResetOtpButtonText\"\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    {this.state.show_password_change_form && (\r\n                        <form onSubmit={this.handleChangePassword}>\r\n                            <p className=\"text-muted font-w700 px-15 mt-20 mb-0\">\r\n                                {localStorage.getItem(\"enterNewPasswordText\")}\r\n                            </p>\r\n                            <div className=\"form-group px-15 pt-30\">\r\n                                <label className=\"col-12 edit-address-input-label\">\r\n                                    {localStorage.getItem(\r\n                                        \"newPasswordLabelText\"\r\n                                    )}{\" \"}\r\n                                    {this.validator.message(\r\n                                        \"password\",\r\n                                        this.state.password,\r\n                                        \"required|min:8\"\r\n                                    )}\r\n                                </label>\r\n                                <div className=\"col-md-9 pb-5\">\r\n                                    <input\r\n                                        ref=\"passwordInput\"\r\n                                        type=\"text\"\r\n                                        name=\"password\"\r\n                                        onChange={this.handleInputChange}\r\n                                        className=\"form-control edit-address-input\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-20 px-15 pt-15 button-block\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-main\"\r\n                                    style={{\r\n                                        backgroundColor: localStorage.getItem(\r\n                                            \"storeColor\"\r\n                                        )\r\n                                    }}\r\n                                    ref=\"changePassBtn\"\r\n                                >\r\n                                    {localStorage.getItem(\r\n                                        \"setNewPasswordButtonText\"\r\n                                    )}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n\r\n                    {this.state.loading && (\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <img\r\n                                src=\"/assets/img/various/spinner.svg\"\r\n                                alt=\"Loading...\"\r\n                                style={{ width: \"50px\" }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {this.state.completed && (\r\n                        <div className=\"d-flex justify-content-center mt-20\">\r\n                            <img\r\n                                src=\"/assets/img/order-placed.gif\"\r\n                                alt=\"Completed\"\r\n                                style={{ width: \"100px\" }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user,\r\n    reset_mail: state.user.reset_mail,\r\n    validate_email_otp: state.user.validate_email_otp,\r\n    change_password: state.user.change_password\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    sendPasswordResetMail,\r\n    verifyPasswordResetOtp,\r\n    changeUserPassword\r\n})(ForgotPassword);\r\n"],"sourceRoot":""}